{
    "healthController": "exports.health = ctx => {\n\tctx.body = { status: \"200\",message: \"success\" };\n};",
    "index": "require(\"dotenv\").config();\nconst variables = require(\"./variables/index\");\nconst koa = require(\"koa\");\nconst koaBody = require(\"koa-body\");\nconst router = require(\"./routes\");\nconst app = new koa();\n\napp.use(koaBody());\napp.use(router.routes());\n\napp.listen(variables.appPort, () => {\n\tconsole.log(\n\t\t`Listening on ${variables.appHost}:${variables.appPort}, in ${variables.env}`\n\t);\n});",
    "route": "const router = require(\"koa-router\");\nconst healthController = require(\"./controllers/healthController\");\nconst routes = new router();\nroutes.get(\"/health\", healthController.health);\nmodule.exports = routes;",
    "varIndex": "const appPort = process.env.APP_PORT;\nconst appHost = process.env.APP_HOST || \"localhost\";\nconst env = process.env.APP_ENV;\n\nconst variables = {\n\tappPort,\n\tappHost,\n\tenv,\n};\n\nmodule.exports = variables;",
    "env": "# App\nAPP_ENV=local\nAPP_PORT=8081\nAPP_HOST\nSERVICE_NAME=",
    "gitignore": "# Logs\nlogs\n*.log\nnpm-debug.log*\nyarn-debug.log*\nyarn-error.log*\nlerna-debug.log*\n.pnpm-debug.log*\n\n# Diagnostic reports (https://nodejs.org/api/report.html)\nreport.[0-9]*.[0-9]*.[0-9]*.[0-9]*.json\n\n# Runtime data\npids\n*.pid\n*.seed\n*.pid.lock\n\n# Directory for instrumented libs generated by jscoverage/JSCover\nlib-cov\n\n# Coverage directory used by tools like istanbul\ncoverage\n*.lcov\n\n# nyc test coverage\n.nyc_output\n\n# Grunt intermediate storage (https://gruntjs.com/creating-plugins#storing-task-files)\n.grunt\n\n# Bower dependency directory (https://bower.io/)\nbower_components\n\n# node-waf configuration\n.lock-wscript\n\n# Compiled binary addons (https://nodejs.org/api/addons.html)\nbuild/Release\n\n# Dependency directories\nnode_modules/\njspm_packages/\n\n# Snowpack dependency directory (https://snowpack.dev/)\nweb_modules/\n\n# TypeScript cache\n*.tsbuildinfo\n\n# Optional npm cache directory\n.npm\n\n# Optional eslint cache\n.eslintcache\n\n# Optional stylelint cache\n.stylelintcache\n\n# Microbundle cache\n.rpt2_cache/\n.rts2_cache_cjs/\n.rts2_cache_es/\n.rts2_cache_umd/\n\n# Optional REPL history\n.node_repl_history\n\n# Output of 'npm pack'\n*.tgz\n\n# Yarn Integrity file\n.yarn-integrity\n\n# dotenv environment variable files\n.env\n.env.development.local\n.env.test.local\n.env.production.local\n.env.local\n\n# parcel-bundler cache (https://parceljs.org/)\n.cache\n.parcel-cache\n\n# Next.js build output\n.next\nout\n\n# Nuxt.js build / generate output\n.nuxt\ndist\n\n# Gatsby files\n.cache/\n# Comment in the public line in if your project uses Gatsby and not Next.js\n# https://nextjs.org/blog/next-9-1#public-directory-support\n# public\n\n# vuepress build output\n.vuepress/dist\n\n# vuepress v2.x temp and cache directory\n.temp\n.cache\n\n# Docusaurus cache and generated files\n.docusaurus\n\n# Serverless directories\n.serverless/\n\n# FuseBox cache\n.fusebox/\n\n# DynamoDB Local files\n.dynamodb/\n\n# TernJS port file\n.tern-port\n\n# Stores VSCode versions used for testing VSCode extensions\n.vscode-test\n\n# yarn v2\n.yarn/cache\n.yarn/unplugged\n.yarn/build-state.yml\n.yarn/install-state.gz\n.pnp.*"
}